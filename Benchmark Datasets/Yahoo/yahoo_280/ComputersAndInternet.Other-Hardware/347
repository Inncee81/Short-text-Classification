wot is a digital computer i mean i dont get a single bit of it cuz its like da computer only reads and and it calculates it but how i need a good explanation describing how does dat works and how does it reads this is a topic that cannot be fully explained in a yahoo answers session but i can give you a quickie lesson have you got hours computers operate digitally meaning they only understand 's and 's that's called binary code binary code is based on the powers of ex etc so reading from right to left what easy rightmost digit has a value of then comes then then add 'em up right suppose you had digits like this ok rightmost first now then a then a then an then a then a thirty two then a then a one hundred and twenty eight add 'em up you get left to right now comes the hard easy part every number letter both upper and lower case all special characters have a binary code designated to them ascii code you can look up the ascii code if you wish when a computer programmer writes the code for a computer program he she writes it in a certain language that the cpu translates to binary code which is then compiled to a file coded that the cpu can understand if the programmer does it right the cpu can then follow the instructions according to the code the programmer has written the cpu's speed is measured in gigahertz a hertz is one cycle per second so a gig cpu can do a billion instructions per second through the built in quartz clock inside the cpu are ya befuddled yet CPU design Binary numeral system CPU cache Computer numbering formats Compiler optimization Binary and text files Hexadecimal Brainfuck Microprogram Atari 8-bit family Embedded system 64-bit Forth programming language Game programmer Bitwise operation Extreme Programming Addressing mode Apollo Guidance Computer Apple Macintosh Programming language Motorola 68000 Virtual memory Redundant array of independent disks CDC 6600 UNIVAC PaX System/34 Assembly language Classic RISC pipeline Perl MBASIC Buffer overflow MIPS architecture Visual Basic X86 assembly language Machine language Control character Computer architecture Fortran PDP-11 Sinclair ZX81 X86 PlayStation 3 Common Lisp Data General Nova Compiler NX bit System/360 AS/400 Datatype ASCII System/36 PostScript Elementary arithmetic Numeral system File Allocation Table IBM PC compatible OpenVMS MOS Technology 6502 MP3 Microprocessor C programming language IBM 700/7000 series Commodore 128 UTF-8 Magic number (programming) Hard disk Linux kernel Abstraction (computer science) Burroughs B5000 Unicode ALGOL 68 Digital-to-analog converter Linked list Thread (computer science) Clock rate String (computer science) Multics Binary prefix Computer programming Mach kernel Mac OS X Computer program History of computing hardware BASIC programming language IA-32 Binary-coded decimal APL programming language Two's complement Prolog 