how long is a piece of string php echo this is a constant string php echo this is an interpolated string init string add string 'this' add string ' ' add string 'is' add string ' ' add string 'an' add string ' ' add string 'interpolated' add string ' ' add var echo where represents the compiled variable named string looking at these opcodes init string allocates an is string variable of one byte to hold the terminating null then it's realloc'd to five bytes by the first add string 'this' plus the terminating null next it's realloc'd to six bytes in order to add a space then again to eight bytes for 'is' then nine to add a space and so on until the temporary string has the contents of the interpolated variable copied into its contents before being used by the echo statement and finally discarded now let's rewrite that line to avoid interpolation and use concatenation instead php does this come out to a simple single opcode nope because the rules necessary to catch a heredoc's end token demand the same careful examination as double quoted variable substitution and you wind up in this case with seventy eight opcodes one init string add strings and a final echo that means a malloc reallocs and a free which will be executed every time that code snippet comes along even the original contents take up more memory because they're stored in distinct zval is string structures why does this happen because there are about a dozen ways that a variable can be hidden inside an interpolated string similarly when looking for a heredoc end token the token can be an arbitrary length containing any of the label characters and may or may not sit on a line by itself put simply it's too difficult to encompass in one regular expression if you're using apc you'll find just such an optimizer built in but not enabled by default to turn it on you'll need to set apc optimization on in your php ini in addition to stitching these run on opcodes back together it'll also add run time speed ups like pre resolving persistent constants to their actual values folding static scalar expressions like to their fixed results e g and simpler stuff like avoiding the use of jmp when the target is the next opcode or boolean casts when the original expression is known to be a boolean value it should be noted that these speed ups also break some of the runtime manipulation features of runkit but that was stuff you probably should have been doing anyway can't use an optimizer because your webhost doesn't know how to set php ini options you can still avoid of the init string add string dilema by simply using single quotes and concatenation or commas when dealing with echo statements it's a simple trick and one which shouldn't harm maintainability too much but on a large complicated script you just might see an extra request or two per second i found this answer by typing the question into my search box Visual Basic Lisp programming language ALGOL 68 JavaScript Python programming language UTF-8 Java programming language Associative array Control flow Malloc Common Lisp Brainfuck C plus plus Quicksort Regular expression Objective-C Polymorphism (computer science) MUMPS Hash table Computer numbering formats Ethernet Static single assignment form Compiler Stack-smashing protection Redundant array of independent disks Exception handling Floppy disk Addressing mode Objective Modula-2 SHA hash functions Computer virus PL/SQL Optimization (computer science) Programming language Password CPU design IBM 1401 Unicode C Sharp Tcl Scheme programming language Emacs Quotation mark Halting problem Data General Nova EIA-708 Buffer overflow Prolog X86 RISC XML Pi-calculus Compact disc Central processing unit AWK programming language Icon programming language Windows XP Categorical list of programming languages Self-modifying code MOS Technology 6502 File Allocation Table Page table Object-oriented programming Microeconomics Shader Artificial neural network Fortran Bash Vector (spatial) X86 assembly language Boolean logic Abstraction (computer science) Internet Relay Chat Perl 6 Array Transmission Control Protocol Rabin-Karp string search algorithm Motorola 68000 PDP-8 Class (computer science) Microsoft Jet Database Engine Manifold 