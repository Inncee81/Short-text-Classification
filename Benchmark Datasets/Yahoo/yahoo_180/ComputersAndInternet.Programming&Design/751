gcd program help need help understanding a part of a program which is able to find the gcd can someone explaine the part from int gcd to before int main starts include iostream using namespace std int gcd int value int value int r while value r value value value value value r return value int main int x int y int howmany cout n finding the gcd in a c program cout n enter how many gcd computations cin howmany for int i i howmany i cout n enter two integers cin x y input of teh values cout n gcd x y gcd x y endl include iostream using namespace std int gcd int value int value int r while value r value value value value value r return value i agree with mcfate what it is doing is making the loop go until value is zero the r is getting the answer to value modulo value then value now contains the number in value value then contains the remainder which is what you get when you mod two numbers you know you have reached the gcd when value is because there is no remainder since this is your first encounter this will be your gcd i believe this is euclid's algorithm for finding the gcd for example value value r r now contains the number value value value now contains value r value now contains r r now contains the number value value value now contains the number value value now contains so exit loop return value which is now and the answer High Level Assembly Forth programming language Assembler Visual Basic Python programming language Emacs Microsoft Macro Assembler Microsoft .NET BASIC programming language Java programming language Compiler optimization PHP Perl Brainfuck Fortran Linux C plus plus Programming language C programming language Common Lisp Computer programming Lisp programming language Source code Categorical list of programming languages Windows XP Software engineering Domain Name System Unix Game programmer Ada programming language TeX Windows API Visual C Plus Plus RISC Hello world program Debugging Visual Basic .NET Commodore 64 C Sharp LaTeX QBasic Objective-C ITunes Cocoa (API) Tcl COBOL Virtual memory Apache HTTP Server Computer Optimization (computer science) Symbian OS OpenGL X Window System Computer program System/36 Extreme Programming Internet Computer virus Cross-platform MUMPS Computer software Dylan programming language Game programming Warez XML Microsoft Windows Turbo Pascal Bootstrapping ALGOL 68 Regular expression Comment Wireless Application Protocol Buffer overflow ARM architecture Mozilla Firefox Embedded system APL programming language OpenBSD GNOME ASCII art Wget Library (computer science) ZX Spectrum MAME Redundant array of independent disks Ajax (programming) Quake III Arena Eiffel programming language Ocaml Operating system GNU Compiler Collection 