do you think the first step to solving a problem is admitting you have one i do believe that admitting you have a problem is the first step and for some it is a big step Twelve-step program Green's function Problem solving Alcoholics Anonymous Algorithm Collision detection Complexity classes P and NP Ordinary differential equation Inventive step and non-obviousness Traveling salesman problem Massachusetts Institute of Technology Random walk Military opposition to the Reconciliation, Tolerance, and Unity Bill (Fiji) EXPTIME LU decomposition Quantum computer Finite element method P-complete Computation Newton's method Eight queens puzzle Time hierarchy theorem Numerical ordinary differential equations Polymerization Software engineering Ruler-and-compass construction Tower of Hanoi Pattern language Suicide prevention Shor's algorithm Expert system Genetic algorithm Theory of constraints Zeno's paradoxes RSA Algorithm of Inventive Problems Solving Learning Keynesian economics Les Aspin Central processing unit Secant method Leonhard Euler Simulated annealing Computer vision Quantum chemistry Route assignment Cholesky decomposition Polymerase chain reaction Descriptive geometry Software development process Roman arithmetic Archimedes Lateral thinking Cissoid of Diocles Slippery slope Research Quicksort Brainstorming Programming language Family (Buffy episode) Exact solutions in general relativity Savitch's theorem Theodicy Collaboration The Nine Chapters on the Mathematical Art Code: Lyoko Escape from New York Geometry XML Actor model Grover's algorithm Robert Watson-Watt Boolean satisfiability problem Space hierarchy theorem Conway's Game of Life Scientific computing Bigfoot Automated theorem proving Artificial neural network Rice's theorem Halting problem Philosophiae Naturalis Principia Mathematica Verlet integration Minesweeper (computer game) Cellular automaton Breadth-first search SAML Levenberg-Marquardt algorithm Feshbach-Fano partitioning Dark energy University of Michigan NP-complete Drill bit Colossus computer Numerical analysis Debugging Risk Merkle-Hellman Henry Sewell 