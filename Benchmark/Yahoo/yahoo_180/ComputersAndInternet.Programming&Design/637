computer programming question involving fetch execute cycle help q the next instruction to be carried out is ldan which loads the number into the accumulator with reference to the special registers in a processor describe the stages of the fetch execute cycle when dealing with this instruction ps i'm an a' level student need help for assignment thank you u'll have my unconditional love i found this i don't know if it is of any help to you though the instruction ldan should be simple it is assembler the number will be stored in a memory location and its place will be substituted with the address of that memory location the instruction will move the memory location to the accumulator it will also apparently change the sign the fetch you are referring to is probably the bit to access the memory location but i don't see anything complex there found a link to the fetch exec cycle C programming language Array Associative array Linked list C syntax C plus plus Compiler optimization Variable Common Lisp Hash table Perl Forth programming language Lisp programming language Python programming language Addressing mode Programming language Objective-C Java programming language Datatype Brainfuck Quicksort Class (computer science) Database Reference (computer science) Comparison of generics to templates Const correctness Stream processing MUMPS Discrete Fourier transform Cyclone programming language BASIC programming language Printf Malloc CPU cache Buffer overflow String (computer science) 64-bit Stack-smashing protection Scheme programming language C Sharp X86 assembly language Vector (spatial) Shader Perl 6 Fortran Prolog Hungarian notation Immutable object Eigenvalue, eigenvector and eigenspace D programming language Euphoria programming language Integer (computer science) Subroutine Index notation Functional programming Apollo Guidance Computer Operator ARM architecture Radix sort 0 (number) APL programming language Read-copy-update Array programming Scope (programming) X86 PHP Burroughs B5000 Reference counting Polymorphism (computer science) Library (computer science) Stack (computing) IA-32 Maxwell's equations Redundant array of independent disks Tensor product Bit array RISC Object-oriented programming PL/I Normal distribution Function (mathematics) Function object Processor register Knuth-Morris-Pratt algorithm Garbage collection (computer science) Ruby programming language IDL programming language Computer Database management system Sorting algorithm Ocaml REXX Static single assignment form List Dylan programming language 